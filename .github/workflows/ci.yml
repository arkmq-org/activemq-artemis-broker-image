name: CI

env:
  IMAGE_NAME: activemq-artemis-broker

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Install prerequisites
        run: >
          sudo apt-get install gcc libkrb5-dev &&
          sudo pip install cekit odcs[client]        

      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Build the image
        run: >
          cekit --verbose build --overrides "{'labels': [{'name': 'quay.expires-after', 'value': '1w'}, {'name': 'git-sha', 'value': '$GITHUB_SHA'}]}" podman --tag $IMAGE_NAME:latest

      - name: Check the image
        run: >
          podman save $IMAGE_NAME:latest | sudo podman load &&
          export CONTAINER_ID=$(sudo podman run --detach --env AMQ_USER=admin --env AMQ_PASSWORD=admin -p61616 $IMAGE_NAME:latest) &&
          echo CONTAINER_ID=$CONTAINER_ID &&
          sudo podman cp $CONTAINER_ID:/opt/amq ./ &&
          ./amq/bin/artemis check queue --name TEST --produce 1000 --browse 1000 --consume 1000 --user admin --password admin &&
          sudo podman kill $CONTAINER_ID

      - name: Push the image
        if: ${{ github.event_name == 'push' }}
        run: >
          export IMAGE_TAG=dev.$(date +%Y%m%d).$(git rev-parse --short "$GITHUB_SHA") &&
          podman login --username=${{ secrets.QUAY_USERNAME }} --password=${{ secrets.QUAY_PASSWORD }} quay.io &&
          podman tag $IMAGE_NAME:latest quay.io/${{ secrets.QUAY_NAMESPACE }}/$IMAGE_NAME:$IMAGE_TAG &&
          podman push quay.io/${{ secrets.QUAY_NAMESPACE }}/$IMAGE_NAME:$IMAGE_TAG &&
          podman tag $IMAGE_NAME:latest quay.io/${{ secrets.QUAY_NAMESPACE }}/$IMAGE_NAME:dev.latest &&
          podman push quay.io/${{ secrets.QUAY_NAMESPACE }}/$IMAGE_NAME:dev.latest
